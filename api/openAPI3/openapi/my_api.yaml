openapi: 3.0.0
info:
  description: |
    This is a sample logging server.
  version: "1"
  title: pds backend
tags:
  - name: plugin
    description: plugin endpoints
  - name: admin
    description: admin endpoints
  - name: metadata
    description: metadata endpoints
paths:
  /v1/plugin/{plugin_id}/{path}:
    post:
      tags:
        - plugin
      summary: call a plugin via the post method
      operationId: api.post_plugin
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
        - in: path
          name: path
          schema:
            type: string
            format: path
          required: true
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema: {}
    get:
      tags:
        - plugin
      summary: call a plugin via the get method
      description: call a plugin via the get method
      operationId: api.get_plugin
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
        - in: path
          name: path
          schema:
            type: string
            format: path
          required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
  /v1/metadata/plugin:
    get:
      tags:
        - metadata
      summary: get plugin ids
      operationId: api.get_plugin_ids
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: name_regex
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Invalid value
  /v1/admin/plugin:
    put:
      tags:
        - admin
      summary: create a new plugin
      operationId: api.add_plugin_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                description: the id of the created plugin
        '400':
          description: Invalid value
    get:
      tags:
        - admin
      summary: get plugin configs
      operationId: api.get_plugin_configs
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: name_regex
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConfig'
        '400':
          description: Invalid value
  /v1/admin/plugin/{plugin_id}:
    get:
      tags:
        - admin
      summary: get plugin configs
      operationId: api.get_plugin_config
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
        '400':
          description: Invalid value
    delete:
      tags:
        - admin
      summary: delete plugin config
      operationId: api.delete_plugin_config
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
    post:
      tags:
        - admin
      description: update plugin config
      operationId: api.update_plugin_config
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
  /v1/admin/plugin/{plugin_id}/container:
    get:
      tags:
        - admin
      summary: get plugin container
      operationId: api.get_plugin_container
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerStatus'
        '400':
          description: Invalid value
    put:
      tags:
        - admin
      summary: create plugin container
      operationId: api.add_plugin_container
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
    delete:
      tags:
        - admin
      description: update plugin container
      operationId: api.delete_plugin_container
      parameters:
        - in: path
          name: plugin_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value

  /v1/admin/container:
    get:
      tags:
        - admin
      summary: get container
      operationId: api.get_containers
      parameters:  []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerStatus'
        '400':
          description: Invalid value
    put:
      tags:
        - admin
      summary: create container
      operationId: api.add_containers
      parameters: []
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
    delete:
      tags:
        - admin
      description: delete container
      operationId: api.delete_containers
      parameters: []
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
components:
  schemas:
    PluginConfig:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        expose:
          type: integer
        hostname:
          type: string
        image:
          type: string
        parameters: {}
        network:
          type: string
        mount:
          type: array
          items:
            type: object
            properties:
              source:
                type: string
              target:
                type: string
              type:
                type: string
              read_only:
                type: boolean
            required:
              - name
              - hostname
              - port
              - source
              - target
              - type
              - read_only
            additionalProperties: false
      required:
        - image
        - parameters
        - network
        - mount
      additionalProperties: false
    ContainerStatus:
      type: object
